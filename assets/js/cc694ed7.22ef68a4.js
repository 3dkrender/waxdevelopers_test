"use strict";(self.webpackChunkwaxdevelopers=self.webpackChunkwaxdevelopers||[]).push([[8046],{3905:(t,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>k});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function c(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),i=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},s=function(t){var e=i(t.components);return n.createElement(p.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,p=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),u=i(a),m=r,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return a?n.createElement(k,l(l({ref:e},s),{},{components:a})):n.createElement(k,l({ref:e},s))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,l=new Array(o);l[0]=m;var c={};for(var p in e)hasOwnProperty.call(e,p)&&(c[p]=e[p]);c.originalType=t,c[u]="string"==typeof t?t:r,l[1]=c;for(var i=2;i<o;i++)l[i]=a[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4505:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var n=a(7462),r=(a(7294),a(3905));const o={title:"Deploy to Your Blockchain",layout:"default",nav_order:65,parent:"Smart Contract Quickstart",grand_parent:"dApp Development","lang-ref":"Deploy to Your Blockchain",lang:"en"},l=void 0,c={unversionedId:"dapp-development/smart-contract-quickstart/dapp_dev_deploy",id:"dapp-development/smart-contract-quickstart/dapp_dev_deploy",title:"Deploy to Your Blockchain",description:"\x3c!--To deploy your smart contract to your local development blockchain, you'll need to:",source:"@site/docs/dapp-development/smart-contract-quickstart/dapp_dev_deploy.md",sourceDirName:"dapp-development/smart-contract-quickstart",slug:"/dapp-development/smart-contract-quickstart/dapp_dev_deploy",permalink:"/waxdevelopers_test/docs/dapp-development/smart-contract-quickstart/dapp_dev_deploy",draft:!1,editUrl:"https://github.com/3dkrender/waxdeveloper_test/tree/main/docs/dapp-development/smart-contract-quickstart/dapp_dev_deploy.md",tags:[],version:"current",frontMatter:{title:"Deploy to Your Blockchain",layout:"default",nav_order:65,parent:"Smart Contract Quickstart",grand_parent:"dApp Development","lang-ref":"Deploy to Your Blockchain",lang:"en"},sidebar:"tutorialSidebar",previous:{title:"Create Accounts",permalink:"/waxdevelopers_test/docs/dapp-development/smart-contract-quickstart/dapp_account"},next:{title:"Create a Smart Contract",permalink:"/waxdevelopers_test/docs/dapp-development/smart-contract-quickstart/dapp_hello_world"}},p={},i=[{value:"Before You Begin",id:"before-you-begin",level:2},{value:"Deploy Your Smart Contract",id:"deploy-your-smart-contract",level:2},{value:"Test Your Smart Contract",id:"test-your-smart-contract",level:2}],s={toc:i},u="wrapper";function d(t){let{components:e,...a}=t;return(0,r.kt)(u,(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In this guide, you'll use ",(0,r.kt)("strong",{parentName:"p"},"cleos")," to deploy and test the wax smart contract you created and compiled in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/dapp-development/wax-cdt/cdt_use.html#compile-hello-world"},"Create a Smart Contract")," tutorial. "),(0,r.kt)("h2",{id:"before-you-begin"},"Before You Begin"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"nodeos")," must be running "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"nodeos -e -p eosio \\\n    --plugin eosio::producer_plugin \\\n    --plugin eosio::chain_api_plugin \\\n    --plugin eosio::http_plugin \\\n    --access-control-allow-origin='*' \\\n    --contracts-console \\\n    --http-validate-host=false \\\n    --verbose-http-errors >> nodeos.log 2>&1 &\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Your wallet must be Opened and Unlocked"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cleos wallet open\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cleos wallet unlock --password PW5KRXKVx25yjL3FvxxY9YxYxxYY9Yxx99yyXTRH8DjppKpD9tKtVz\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You must create a WAX Account for your smart contract. Refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/dapp_account"},"Create Accounts")," if you haven't completed this step."))),(0,r.kt)("h2",{id:"deploy-your-smart-contract"},"Deploy Your Smart Contract"),(0,r.kt)("p",null,"To deploy your smart contract's WASM file to your local blockchain, use ",(0,r.kt)("inlineCode",{parentName:"p"},"cleos set contract")," from the command line:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"account"),(0,r.kt)("td",{parentName:"tr",align:null},"waxsc1"),(0,r.kt)("td",{parentName:"tr",align:null},"Your smart contract's account.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"path"),(0,r.kt)("td",{parentName:"tr",align:null},"/users/wax-blockchain/wax-cdt/mycontracts/wax"),(0,r.kt)("td",{parentName:"tr",align:null},"Full path to your WASM file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"permission"),(0,r.kt)("td",{parentName:"tr",align:null},"-p waxsc1@active"),(0,r.kt)("td",{parentName:"tr",align:null},"Active or Owner permission for your smart contract's account.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cleos set contract waxsc1 /users/wax-blockchain/wax-cdt/mycontracts/wax -p waxsc1@active\n")),(0,r.kt)("p",null,"The console prints the following confirmation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'Reading WASM from /users/wax-blockchain/wax-cdt/mycontracts/wax/wax.wasm...\nPublishing contract...\nexecuted transaction: 8a79664a3f0457513fabaa5753c41b18588cb2994cd5e3164328eafc9663f7a8  2832 bytes  57440 us\n#         eosio <= eosio::setcode               {"account":"waxsc1","vmtype":0,"vmversion":0,"code":"0061736d01000000013a0b60017f0060027f7f0060037f7...\n#         eosio <= eosio::setabi                {"account":"waxsc1","abi":"0e656f73696f3a3a6162692f312e3100010567726565740000010000000080acd46505677...\nwarning: transaction executed locally, but may not be confirmed by the network yet         ]\n')),(0,r.kt)("p",null,"Your smart contract should now be live on your local blockchain."),(0,r.kt)("h2",{id:"test-your-smart-contract"},"Test Your Smart Contract"),(0,r.kt)("p",null,"To test your smart contract, use ",(0,r.kt)("inlineCode",{parentName:"p"},"cleos push action")," from the command line:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"account"),(0,r.kt)("td",{parentName:"tr",align:null},"waxsc1"),(0,r.kt)("td",{parentName:"tr",align:null},"Your smart contract's account.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"action"),(0,r.kt)("td",{parentName:"tr",align:null},"hi"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of action.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"datastream"),(0,r.kt)("td",{parentName:"tr",align:null},"'",'["YourName"]',"'"),(0,r.kt)("td",{parentName:"tr",align:null},"Enter your name or any other string.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"permission"),(0,r.kt)("td",{parentName:"tr",align:null},"-p waxsc1@active"),(0,r.kt)("td",{parentName:"tr",align:null},"Active or Owner permission for your smart contract's account.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cleos push action waxsc1 hi '[\"YourName\"]' -p waxsc1@active\n")),(0,r.kt)("p",null,"The console prints the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'executed transaction: 6a0b1489d903f2cacc6480830358f07aaf65b20bf1d7e855dc20097f4d64dc52  104 bytes  1727 us\n#        waxsc2 <= waxsc2::hi                   {"nm":"YourName"}\n>> Name : YourName\nwarning: transaction executed locally, but may not be confirmed by the network yet         ]\n')),(0,r.kt)("p",null,"If you receive an error that the transaction took too long, run ",(0,r.kt)("inlineCode",{parentName:"p"},"cleos push action")," again. If you still receive an error, try restarting ",(0,r.kt)("strong",{parentName:"p"},"nodeos"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"Error 3080006: Transaction took too long\nError Details:\ndeadline exceeded\npending console output:\n")))}d.isMDXComponent=!0}}]);