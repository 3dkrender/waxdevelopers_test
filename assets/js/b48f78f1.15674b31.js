"use strict";(self.webpackChunkwaxdevelopers=self.webpackChunkwaxdevelopers||[]).push([[8081],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,h=u["".concat(p,".").concat(m)]||u[m]||c[m]||o;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4806:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={title:"Set Up a WAX Testnet Node",nav_order:142,layout:"default",parent:"WAX Infrastructure Guides","lang-ref":"Set Up a WAX Testnet Node",lang:"en"},i=void 0,s={unversionedId:"wax-infrastructure/wax-testnet-node",id:"wax-infrastructure/wax-testnet-node",title:"Set Up a WAX Testnet Node",description:"Running Antelope infrastructure to support the WAX Protocol Network can be quite daunting when first starting out. This series of guides aims to demystify the infrastructure and operational requirements required to run Rock Solid services for the WAX Protocol Network.",source:"@site/docs/wax-infrastructure/wax-testnet-node.md",sourceDirName:"wax-infrastructure",slug:"/wax-infrastructure/wax-testnet-node",permalink:"/waxdevelopers_test/docs/wax-infrastructure/wax-testnet-node",draft:!1,editUrl:"https://github.com/3dkrender/waxdevelopers_test/tree/main/docs/wax-infrastructure/wax-testnet-node.md",tags:[],version:"current",frontMatter:{title:"Set Up a WAX Testnet Node",nav_order:142,layout:"default",parent:"WAX Infrastructure Guides","lang-ref":"Set Up a WAX Testnet Node",lang:"en"},sidebar:"tutorialSidebar",previous:{title:"Set Up a WAX Testnet Block Producer Node",permalink:"/waxdevelopers_test/docs/wax-infrastructure/wax-testnet-block-producer"},next:{title:"Working with WAX Software Files and Folders",permalink:"/waxdevelopers_test/docs/wax-infrastructure/working-with-wax-software-files"}},p={},l=[{value:"Testnet Requirements",id:"testnet-requirements",level:2},{value:"Build the Software",id:"build-the-software",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Running Nodeos",id:"running-nodeos",level:2}],d={toc:l},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Running Antelope infrastructure to support the WAX Protocol Network can be quite daunting when first starting out. This series of guides aims to demystify the infrastructure and operational requirements required to run Rock Solid services for the WAX Protocol Network."),(0,r.kt)("p",null,"This guide will show you how to get started with building a WAX node on the Public WAX Testnet."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This guide has been updated to incorporate the")," ",(0,r.kt)("a",{parentName:"p",href:"https://antelope.io/"},(0,r.kt)("em",{parentName:"a"},"Antelope"))," ",(0,r.kt)("em",{parentName:"p"},"Leap software build process.")),(0,r.kt)("h1",{id:"how-to-set-up-a-wax-testnet-node"},"How to Set Up a WAX Testnet Node"),(0,r.kt)("p",null,"The WAX Testnet has relatively low system requirements compared to the Mainnet, however it is fully functional with freely available WAX Tokens so it is an ideal place to get familiar with the WAX software and network itself."),(0,r.kt)("h2",{id:"testnet-requirements"},"Testnet Requirements"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Hardware")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"4 Core CPU /  ",(0,r.kt)("em",{parentName:"li"},"4Ghz__+")," ",(0,r.kt)("em",{parentName:"li"},"recommended if you would like to produce blocks")),(0,r.kt)("li",{parentName:"ul"},"128GB Disk /  ",(0,r.kt)("em",{parentName:"li"},"Preferably SSD or NVMe")),(0,r.kt)("li",{parentName:"ul"},"4GB RAM")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Operating System")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ubuntu 18.04"),(0,r.kt)("li",{parentName:"ul"},"Ubuntu 20.04  ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"(Recommended)"))),(0,r.kt)("li",{parentName:"ul"},"Ubuntu 22.04")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Internet")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Modern Broadband / Fibre Connection (1Mb/s and above)"),(0,r.kt)("li",{parentName:"ul"},"Static Public IP Address (Either terminating on this node or forwarded with NAT)")),(0,r.kt)("h2",{id:"build-the-software"},"Build the Software"),(0,r.kt)("p",null,"The WAX software is derived from opensource Antelope software, however it has been modified to suit the needs of the WAX Protocol Network."),(0,r.kt)("p",null,"Currently the WAX Block Producer accepted software build and version is  ",(0,r.kt)("inlineCode",{parentName:"p"},"v3.1.0wax01"),"  created by  ",(0,r.kt)("a",{parentName:"p",href:"https://cc32d9.medium.com/"},"cc32d9"),"  who is member of the  ",(0,r.kt)("a",{parentName:"p",href:"https://eosamsterdam.net/"},"EOS Amsterdam Guild")),(0,r.kt)("p",null,"The latest  ",(0,r.kt)("inlineCode",{parentName:"p"},"wax"),"build tag is currently available on the  ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cc32d9/wax-leap/tags"},"cc32d9 Github")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Building Process")),(0,r.kt)("p",null,"This example uses  ",(0,r.kt)("a",{parentName:"p",href:"https://ubuntu.com/"},"Ubuntu Linux"),"  to build the WAX software from source following the process below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"> cd ~\n\n> sudo apt install -y file\n\n> git clone [https://github.com/cc32d9/wax-leap.git](https://github.com/cc32d9/wax-leap.git)\n\n> cd wax-leap\n\n> git checkout v3.1.0.wax01\n\n> git submodule update --init --recursive\n\n> sudo bash scripts/install_deps.sh\n\n> mkdir build\n\n# If necessary supplement $(nproc) below with the number of jobs your server can sustain, I suggest 4GB RAM required / job\n\n> nice bash scripts/pinned_build.sh ~/wax-leap/build/leap-deps ~/wax-leap/build $(nproc)\n\n# Binaries are located in ~/wax-leap/build/programs\n")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"Now that a clean build of the WAX software has been compiled lets get into configuring for operation."),(0,r.kt)("p",null,"To configure and start the node  ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeos"),"  will be used,  ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeos"),"is the core service daemon that runs on every WAX Protocol Network node."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"nodeos"),"  can be configured to process smart contracts, validate transactions, produce blocks containing valid transactions, and confirm blocks to record them on the blockchain. You can read more about it  ","[here]","(",(0,r.kt)("a",{parentName:"p",href:"https://developers.eos.io/manuals/eos/latest/nodeos/"},"https://developers.eos.io/manuals/eos/latest/nodeos/"),"."),(0,r.kt)("p",null,"The primary operational functions of  ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeos"),"  are; running it as a Block Producer, Network API Endpoint, P2P Seed Node or State-History Node. Typically on a busy network such as the WAX Mainnet you would separate these functions across physically discrete servers."),(0,r.kt)("p",null,"In this WAX Testnet example you will make your node connect to other network peers, offer a P2P Seed Node service and make the node available as a Network API Endpoint.  ",(0,r.kt)("em",{parentName:"p"},"This node won\u2019t be providing historical data query support.")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"nodeos"),"  requires  ",(0,r.kt)("strong",{parentName:"p"},"two files"),"  to connect to peers and run on the WAX Testnet:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"config.ini")),(0,r.kt)("p",null,"Create a default  ",(0,r.kt)("inlineCode",{parentName:"p"},"config.ini"),"  by running  ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeos"),"  without config as per the command below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"> mkdir ~/waxdata\n\n> cd ~/wax-leap/build/programs/nodeos\n\n> ./nodeos --data-dir ~/waxdata --config-dir ~/waxdata\n")),(0,r.kt)("p",null,"You will then be able to edit the newly created  ",(0,r.kt)("inlineCode",{parentName:"p"},"config.ini"),"  and see all the available parameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"> cd ~/waxdata\n\n> nano config.ini\n")),(0,r.kt)("p",null,"Now edit the ",(0,r.kt)("inlineCode",{parentName:"p"},"config.ini"),"and add the following configuration settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'wasm-runtime = eos-vm-jit\n\nchain-state-db-size-mb = 16384  \nchain-state-db-guard-size-mb = 1024\n\nenable-account-queries = true\n\nhttp-server-address = 0.0.0.0:8888  \naccess-control-allow-origin = *  \naccess-control-allow-headers = Origin, X-Requested-With, Content-Type, Accept  \nhttp-max-response-time-ms = 100  \nverbose-http-errors = true  \nhttp-validate-host = false\n\np2p-listen-endpoint = 0.0.0.0:9876  \n  \n# 3dkrenderwax: FI, Finland  \np2p-peer-address = testnet-p2p.3dkrender.com:9876  \n  \n# amsterdamwax: DE, Falkenstein  \np2p-peer-address = waxtest.eu.eosamsterdam.net:9912  \n  \n# blokcrafters: US, Portland, Oregon  \np2p-peer-address = waxtest-peer-us.blokcrafters.io:19876  \n  \n# blokcrafters: FI, Helsinki, Uusimaa  \np2p-peer-address = waxtest-peer-eu.blokcrafters.io:19876  \n  \n# bountyblokbp: FR, France  \np2p-peer-address = p2p.wax-test.bountyblok.io:9874  \n  \n# bp.box: KY, Cayman Islands  \np2p-peer-address = waxtest.defibox.xyz:19876  \n  \n# eosdacserver: DE, Germany  \np2p-peer-address = waxtest-p2p.eosdac.io:49876  \n  \n# eosiodetroit: US, wax-testnet-bp  \np2p-peer-address = p2p.testnet.wax.detroitledger.tech:1337  \n  \n# eosphereiobp: AU, Sydney  \np2p-peer-address = peer1-wax-testnet.eosphere.io:9876  \n  \n# greeneosiobp: DE, Germany  \np2p-peer-address = p2p.waxtest.waxgalaxy.io:9878  \n  \n# guild.nefty: DE, Germany  \np2p-peer-address = p2p-testnet.neftyblocks.com:19876  \n  \n# ivote4waxusa: US, Greenville,SC,USA  \np2p-peer-address = test.wax.p2p.eosusa.io:19875  \n  \n# liquidgaming: DE, Germany  \np2p-peer-address = 138.201.23.118:9877  \n  \n# nation.wax: CA, Canada  \np2p-peer-address = waxtest.seed.eosnation.io:9876  \n  \n# oneinacilian: GB, United Kingdom  \np2p-peer-address = p2ptest.oiac.io:10877  \n  \n# pink.gg: DE, Germany  \np2p-peer-address = peer1.testnet.wax.pink.gg:16714  \n  \n# waxhiveguild: DE, Germany  \np2p-peer-address = peer-test.hivebp.io:9876  \n  \n# waxmadrid111: DE, SEED  \np2p-peer-address = wax-seed-testnet.eosiomadrid.io:9876  \n  \n# waxswedenorg: SE, Sweden  \np2p-peer-address = p2p.testnet.waxsweden.org:59676  \n  \n# wecan: DE, Berlin  \np2p-peer-address = seed1-wax-testnet.wecan.dev:9876  \n  \n# wecan: GB, London  \np2p-peer-address = seed2-wax-testnet.wecan.dev:9876\n\n# EOSNation Provided PeerList - https://validate.eosnation.io/waxtest/reports/config.html\n\nagent-name = "<yourname> WAX Testnet"\n\nmax-clients = 100\n\nsync-fetch-span = 500\n\nplugin = eosio::http_plugin  \nplugin = eosio::chain_plugin  \nplugin = eosio::chain_api_plugin\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"genesis.json")),(0,r.kt)("p",null,"These are the initial state parameters required by every new starting node on the WAX Testnet. Create the file as below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"> cd ~/waxdata\n\n> nano genesis.json\n")),(0,r.kt)("p",null,"Add the following parameters to the  ",(0,r.kt)("inlineCode",{parentName:"p"},"genesis.json"),"  file for the WAX Public Testnet:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{  \n "initial_timestamp": "2019\u201312\u201306T06:06:06.000",  \n "initial_key": "EOS7PmWAXLBaqCzSgbq8cyr2HFztQpwBpXk3djBJA8fyoyUnYM37q",  \n "initial_configuration": {  \n "max_block_net_usage": 1048576,  \n "target_block_net_usage_pct": 1000,  \n "max_transaction_net_usage": 524288,  \n "base_per_transaction_net_usage": 12,  \n "net_usage_leeway": 500,  \n "context_free_discount_net_usage_num": 20,  \n "context_free_discount_net_usage_den": 100,  \n "max_block_cpu_usage": 200000,  \n "target_block_cpu_usage_pct": 2500,  \n "max_transaction_cpu_usage": 150000,  \n "min_transaction_cpu_usage": 100,  \n "max_transaction_lifetime": 3600,  \n "deferred_trx_expiration_window": 600,  \n "max_transaction_delay": 3888000,  \n "max_inline_action_size": 4096,  \n "max_inline_action_depth": 6,  \n "max_authority_depth": 6  \n }  \n}\n')),(0,r.kt)("h2",{id:"running-nodeos"},"Running Nodeos"),(0,r.kt)("p",null,"Now that the  ",(0,r.kt)("inlineCode",{parentName:"p"},"config.ini"),"  has been configured and the initial WAX Testnet chain parameters  ",(0,r.kt)("inlineCode",{parentName:"p"},"genesis.json"),"  have been created, you can now join the network and sync up the node."),(0,r.kt)("p",null,"Use screen to keep your session live even when you disconnect, usage below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Create a new screen session  \n----------------------------  \n> screen -US wax   \n  \nDisconnect screen session  \n-------------------------  \n> ctrl-a+d \n\nReconnect screen session  \n------------------------  \n> screen -r wax\n")),(0,r.kt)("p",null,"Run  ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeos"),"  with pointers to the config, data directory and genesis file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"> cd ~/wax-leap/build/programs/nodeos\n\n> ./nodeos --data-dir ~/waxdata --config-dir ~/waxdata --genesis-json ~/waxdata/genesis.json\n")),(0,r.kt)("p",null,"Your WAX Testnet node will now start syncing with the configured peers until it catches up and is current with the WAX Testnet chain."),(0,r.kt)("hr",null),(0,r.kt)("p",null,"These ",(0,r.kt)("strong",{parentName:"p"},"WAX Developer Technical Guides")," are created using source material from the ",(0,r.kt)("a",{parentName:"p",href:"https://medium.com/eosphere/wax-technical-how-to/home"},"EOSphere WAX Technical How To Series")),(0,r.kt)("p",null,"Be sure to ask any questions in the  ",(0,r.kt)("a",{parentName:"p",href:"https://t.me/eosphere_io"},"EOSphere Telegram")))}c.isMDXComponent=!0}}]);