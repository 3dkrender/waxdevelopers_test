"use strict";(self.webpackChunkwaxdevelopers=self.webpackChunkwaxdevelopers||[]).push([[9277],{3905:(e,t,o)=>{o.d(t,{Zo:()=>s,kt:()=>f});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function p(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var i=r.createContext({}),c=function(e){var t=r.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},s=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=c(o),m=n,f=d["".concat(i,".").concat(m)]||d[m]||u[m]||a;return o?r.createElement(f,l(l({ref:t},s),{},{components:o})):r.createElement(f,l({ref:t},s))}));function f(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,l=new Array(a);l[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[d]="string"==typeof e?e:n,l[1]=p;for(var c=2;c<a;c++)l[c]=o[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},1248:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=o(7462),n=(o(7294),o(3905));const a={title:"WAX-CDT Build Tools",layout:"default",nav_order:53,parent:"WAX Contract Development Toolkit",grand_parent:"dApp Development","lang-ref":"WAX-CDT Build Tools",lang:"en"},l=void 0,p={unversionedId:"dapp-development/wax-cdt/cdt_cpp",id:"dapp-development/wax-cdt/cdt_cpp",title:"WAX-CDT Build Tools",description:"WAX-CDT includes various eosio commands, built around the Clang front-end and tooling infrastructure. This collection includes various tools to build optimized, high-performance WASM files. Refer to WAX-CDT Options for more information.",source:"@site/docs/dapp-development/wax-cdt/cdt_cpp.md",sourceDirName:"dapp-development/wax-cdt",slug:"/dapp-development/wax-cdt/cdt_cpp",permalink:"/waxdevelopers_test/docs/dapp-development/wax-cdt/cdt_cpp",draft:!1,editUrl:"https://github.com/3dkrender/waxdeveloper_test/tree/main/docs/dapp-development/wax-cdt/cdt_cpp.md",tags:[],version:"current",frontMatter:{title:"WAX-CDT Build Tools",layout:"default",nav_order:53,parent:"WAX Contract Development Toolkit",grand_parent:"dApp Development","lang-ref":"WAX-CDT Build Tools",lang:"en"},sidebar:"tutorialSidebar",previous:{title:"WAX Contract Development Toolkit",permalink:"/waxdevelopers_test/docs/dapp-development/wax-cdt/"},next:{title:"Install WAX-CDT",permalink:"/waxdevelopers_test/docs/dapp-development/wax-cdt/cdt_install"}},i={},c=[{value:"Use eosio-cpp",id:"use-eosio-cpp",level:2}],s={toc:c},d="wrapper";function u(e){let{components:t,...o}=e;return(0,n.kt)(d,(0,r.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"WAX-CDT includes various ",(0,n.kt)("strong",{parentName:"p"},"eosio")," commands, built around the ",(0,n.kt)("a",{href:"https://clang.llvm.org/",target:"_blank"},"Clang")," front-end and tooling infrastructure. This collection includes various tools to build optimized, high-performance WASM files. Refer to ",(0,n.kt)("a",{parentName:"p",href:"/docs/tools/cdt_options"},"WAX-CDT Options")," for more information."),(0,n.kt)("p",null,"It's recommended that you use ",(0,n.kt)("strong",{parentName:"p"},"eosio-init")," to ",(0,n.kt)("a",{parentName:"p",href:"/docs/dapp-development/wax-cdt/cdt_use.html#compile-hello-world"},"Create a Smart Contract"),". This tool provides scripts to easily organize and build your project. "),(0,n.kt)("p",null,"If these scripts do not meet your needs, you can also use the ",(0,n.kt)("strong",{parentName:"p"},"eosi-cpp")," command to compile your smart contracts."),(0,n.kt)("h2",{id:"use-eosio-cpp"},"Use eosio-cpp"),(0,n.kt)("p",null,"To generate a WASM and ABI file for your smart contract:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"From the command line, navigate to your smart contracts folder.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run the ",(0,n.kt)("strong",{parentName:"p"},"eosio-cpp")," build command with the ",(0,n.kt)("strong",{parentName:"p"},"-abigen")," parameter."))),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("strong",null,"Tip:")," ",(0,n.kt)("strong",null,"eosio-cpp")," also includes Ricardian terms in your ABI file. Refer to [Ricardian Contracts](/docs/tools/ricardian_contract) and [Ricardian Clauses](/docs/tools/ricardian_clause) for more information."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"eosio-cpp -abigen wax.cpp -o wax.wasm\n")),(0,n.kt)("p",null,"This will generate two files in your contract's directory:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The compiled binary WASM (wax.wasm)"),(0,n.kt)("li",{parentName:"ul"},"The generated ABI file (wax.abi)")))}u.isMDXComponent=!0}}]);