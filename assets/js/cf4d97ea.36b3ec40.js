"use strict";(self.webpackChunkwaxdevelopers=self.webpackChunkwaxdevelopers||[]).push([[5060],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),h=a,m=c["".concat(s,".").concat(h)]||c[h]||d[h]||o;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},869:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={title:"How to Set Up a Reliable WAX Load Balancer",nav_order:146,layout:"default",parent:"WAX Infrastructure Guides","lang-ref":"How to Set Up a Reliable WAX Load Balancer",lang:"en"},i=void 0,l={unversionedId:"wax-infrastructure/wax-mainnet-node-load-balancer",id:"wax-infrastructure/wax-mainnet-node-load-balancer",title:"How to Set Up a Reliable WAX Load Balancer",description:"Our previous guides have focused primarily on building and running WAX Software, but that is only part of the picture when providing reliable services to the WAX Ecosystem.",source:"@site/docs/wax-infrastructure/wax-mainnet-node-load-balancer.md",sourceDirName:"wax-infrastructure",slug:"/wax-infrastructure/wax-mainnet-node-load-balancer",permalink:"/waxdevelopers_test/docs/wax-infrastructure/wax-mainnet-node-load-balancer",draft:!1,editUrl:"https://github.com/wax-office-of-inspector-general/wax-developer/tree/main/docs/wax-infrastructure/wax-mainnet-node-load-balancer.md",tags:[],version:"current",frontMatter:{title:"How to Set Up a Reliable WAX Load Balancer",nav_order:146,layout:"default",parent:"WAX Infrastructure Guides","lang-ref":"How to Set Up a Reliable WAX Load Balancer",lang:"en"},sidebar:"tutorialSidebar",previous:{title:"WAX Infrastructure Guides",permalink:"/waxdevelopers_test/docs/wax-infrastructure/"},next:{title:"How to Mitigate API abuse on a WAX Load Balancer",permalink:"/waxdevelopers_test/docs/wax-infrastructure/wax-mainnet-node-mitigate-abuse"}},s={},p=[],u={toc:p},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Our previous guides have focused primarily on building and running WAX Software, but that is only part of the picture when providing reliable services to the WAX Ecosystem."),(0,a.kt)("p",null,"This guide will walk you through the process of building and running a Load Balancer service to reliably scale to WAX\u2019s security and performance demands."),(0,a.kt)("h1",{id:"how-to-set-up-a-reliable-wax-load-balancer"},"How to Set Up a Reliable WAX Load Balancer"),(0,a.kt)("p",null,"Scaling your WAX Protocol Network API services to millions of requests per day can be a challenge if you hadn\u2019t planned ahead for the load and availability requirements of providing Guild level service delivery."),(0,a.kt)("p",null,"Implementing Load Balancers at the public facing side of your infrastructure are a fantastic way to reliably scale your API service offering."),(0,a.kt)("p",null,"A Load Balancer is primarily implemented for the following benefits:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"To balance user requests across multiple backend servers"),(0,a.kt)("li",{parentName:"ul"},"Offloads SSL handshake and encryption/decryption"),(0,a.kt)("li",{parentName:"ul"},"Decreases the burden of backend servers having to manage application and network user sessions"),(0,a.kt)("li",{parentName:"ul"},"Creates a security demarcation point for your WAX service offering to users out on the internet")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://eosphere.io/"},"EOSphere"),"  have had tremendous success utilising  ",(0,a.kt)("a",{parentName:"p",href:"https://www.haproxy.org/"},"HAProxy"),"  software to serve our Load Balancer requirements."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"HAProxy is a free,")," ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"very"))," ",(0,a.kt)("em",{parentName:"p"},"fast and reliable solution offering")," ",(0,a.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/High_availability"},(0,a.kt)("em",{parentName:"a"},"high availability")),(0,a.kt)("em",{parentName:"p"},",")," ",(0,a.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/Load_balancer"},(0,a.kt)("em",{parentName:"a"},"load balancing")),(0,a.kt)("em",{parentName:"p"},", and proxying for TCP and HTTP-based applications. It is particularly suited for very high traffic web sites and powers quite a number of the world\u2019s most visited ones. Over the years it has become the de-facto standard opensource load balancer, is now shipped with most mainstream Linux distributions, and is often deployed by default in cloud platforms")),(0,a.kt)("p",null,"This guide will provide an example of how to build and configure HAProxy for use on the WAX Protocol Network based on our own experience and recommendations."),(0,a.kt)("h1",{id:"requirements"},"Requirements"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Hardware (Running is a virtual environment works great)",(0,a.kt)("br",{parentName:"strong"})),(0,a.kt)("em",{parentName:"p"},"Note: Depending on what traffic you receive you may need to scale up as required")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"2 Core+ CPU"),(0,a.kt)("li",{parentName:"ul"},"32GB+ Disk"),(0,a.kt)("li",{parentName:"ul"},"1GB+ RAM"),(0,a.kt)("li",{parentName:"ul"},"Public Network Interface"),(0,a.kt)("li",{parentName:"ul"},"Private Network Interface")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Operating System")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://ubuntu.com/"},"Ubuntu"),"  18.04"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://ubuntu.com/"},"Ubuntu"),"  20.04  ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("em",{parentName:"strong"},"(Recommended)"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://www.kernel.org/"},"Linux 2.4"),"  on x86, x86_64, Alpha, Sparc, MIPS, PARISC"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://www.kernel.org/"},"Linux 2.6\u20135.x"),"  on x86, x86_64, ARM, AARCH64, MIPS, Sparc, PPC64"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://www.sun.com/software/solaris/"},"Solaris 8/9"),"  on UltraSPARC 2 and 3"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://www.sun.com/software/solaris/"},"Solaris 10"),"  on Opteron and UltraSPARC"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://www.freebsd.org/"},"FreeBSD 4.10 \u2014 current"),"  on x86"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://www.openbsd.org/"},"OpenBSD 3.1 to -current"),"  on i386, amd64, macppc, alpha, sparc64 and VAX (check the ports)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://www-03.ibm.com/systems/power/software/aix/about.html"},"AIX 5.1\u20135.3"),"  on Power\u2122 architecture")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Internet")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Modern Broadband / Fibre Connection (100Mb/s synchronous and above)"),(0,a.kt)("li",{parentName:"ul"},"Static Public IP Address (Either terminating on this node or forwarded with NAT)"),(0,a.kt)("li",{parentName:"ul"},"Domain Name and DNS Provider"),(0,a.kt)("li",{parentName:"ul"},"SSL Certificate")),(0,a.kt)("h1",{id:"install-the-software"},"Install the Software"),(0,a.kt)("p",null,"In this example we will be installing HAProxy from a community edition recommended Personal Package Archive (PPA) maintained by  ",(0,a.kt)("a",{parentName:"p",href:"https://launchpad.net/~vbernat"},"Vincent Berant"),"  and using the latest as of October 2022 HAProxy LTS branch  ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/haproxy/haproxy/releases/tag/v2.6.0"},"v2.6.0"),"  (Supported until Q2 2027)"),(0,a.kt)("p",null,"This build has native support for  ",(0,a.kt)("strong",{parentName:"p"},"Prometheus"),"  allowing you to view and export metrics and enables cool observability as well as logging and tracing."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Installation Process")),(0,a.kt)("p",null,"Use the below process to install HAProxy v2.6.0:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"> sudo apt install --no-install-recommends software-properties-common\n\n> sudo add-apt-repository ppa:vbernat/haproxy-2.6\n\n> sudo apt update> apt install haproxy=2.6.\\*\n")),(0,a.kt)("p",null,"You can check the installed version as below, make sure you can see Prometheus support:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"> haproxy -vv\n\nBuilt with the Prometheus exporter as a service\n")),(0,a.kt)("h1",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"Now that you have a fresh HAProxy install let\u2019s configure the instance for production. In this example the goal is to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Load Balance incoming requests to two WAX API  ",(0,a.kt)("inlineCode",{parentName:"li"},"nodeos"),"  servers"),(0,a.kt)("li",{parentName:"ul"},"Offload SSL encryption/decryption of the HTTPS sessions"),(0,a.kt)("li",{parentName:"ul"},"Observe HAProxy metrics utilising the Prometheus service")),(0,a.kt)("p",null,"This example has a  ",(0,a.kt)("strong",{parentName:"p"},"public internet interface"),"  which is client facing as well as a separate  ",(0,a.kt)("strong",{parentName:"p"},"private LAN interface"),"  where the servers are hosted."),(0,a.kt)("p",null,"All HAProxy configuration is found in  ",(0,a.kt)("inlineCode",{parentName:"p"},"haproxy.cfg"),"  The configuration is divided into 4 sections."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"global      \n# global settings go here \n\ndefaults      \n# defaults go here \n\nfrontend      \n# the frontend accepts requests from clients \n\nbackend      \n# servers to fulfill client request go here\n")),(0,a.kt)("p",null,"There is a default  ",(0,a.kt)("inlineCode",{parentName:"p"},"haproxy.cfg"),"  that you can make a copy of for future reference:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"> sudo mv /etc/haproxy/haproxy.cfg /etc/haproxy/old_haproxy.cfg\n")),(0,a.kt)("p",null,"Follow the below to configure each section in the new  ",(0,a.kt)("inlineCode",{parentName:"p"},"haproxy.cfg"),"  :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"> sudo nano /etc/haproxy/haproxy.cfg\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"global")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"global  \n        log /dev/log    local0  \n        log /dev/log    local1 notice  \n        maxconn 100000  \n        chroot /var/lib/haproxy  \n        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners  \n        stats timeout 30s  \n        tune.ssl.default-dh-param 2048  \n        user haproxy  \n        group haproxy  \n        daemon\n        \n        # Default SSL material locations  \n        ca-base /etc/ssl/certs  \n        crt-base /etc/ssl/private\n        \n        # Default ciphers to use on SSL-enabled listening sockets.  \n        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS  \n        ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"defaults")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"defaults  \n        log     global  \n        mode    http  \n        http-reuse always  \n        option  httplog  \n        option  dontlognull  \n        timeout connect 10000  \n        timeout client  25000  \n        timeout server  25000  \n        errorfile 400 /etc/haproxy/errors/400.http  \n        errorfile 403 /etc/haproxy/errors/403.http  \n        errorfile 408 /etc/haproxy/errors/408.http  \n        errorfile 500 /etc/haproxy/errors/500.http  \n        errorfile 502 /etc/haproxy/errors/502.http  \n        errorfile 503 /etc/haproxy/errors/503.http  \n        errorfile 504 /etc/haproxy/errors/504.http\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"frontend")),(0,a.kt)("p",null,"In this section you will be enabling your public internet interface to accept incoming client requests, you will also be binding your SSL Certificate to be able to accept HTTPS and provide SSL Offloading."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'frontend http-in  \n    bind <PUBLIC IP ADDRESS>:80  \n    bind <PUBLIC IP ADDRESS>:443 ssl crt /etc/ssl/certs/eosphere-local-cert-key-2021.pem alpn h2,http/1.1  \n    http-response set-header Access-Control-Allow-Origin "*"  \n    http-response set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, JSNLog-RequestId, activityId, applicationId, applicationUserId, channelId, senderId, sessionId"\n')),(0,a.kt)("p",null,"EOSphere use  ",(0,a.kt)("a",{parentName:"p",href:"https://comodosslstore.com/"},"Comodo"),"  provided wildcard SSL certificates, your results may vary but the construct of the  ",(0,a.kt)("inlineCode",{parentName:"p"},"eosphere-local-cert-key-2021.pem"),"  in this example is the following and in the order below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"your_company.key\n\nyour_company.crt\n\nSectigoRSADomainValidationSecureServerCA.crt\n\nUSERTrustRSAAAACA.crt\n")),(0,a.kt)("p",null,"Copy and past the text in the above files into the new single file and save this created file to  ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/ssl/certs/<yourcompany_key>.pem")),(0,a.kt)("p",null,"In addition to a typical frontend configuration this example will use an access-list to recognise traffic based on the requested destination domain. This is handy if you were supporting other API services with similar backend requests but with different domain names. For example WAX Mainnet (wax.eosphere.io) and WAX Testnet (wax-testnet.eosphere.io)."),(0,a.kt)("p",null,"Add the following to the  ",(0,a.kt)("inlineCode",{parentName:"p"},"frontend http-in"),"  section to cover the access-lists:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"acl wax_acl hdr(host) -i wax.eosphere.io\n\nuse_backend wax_api_servers if wax_acl { path_beg /v1/chain }  \nuse_backend wax_api_servers if wax_acl { path_beg /v1/node/get_supported_apis }\n")),(0,a.kt)("p",null,"This example is matching for requests to wax.eosphere.io"),(0,a.kt)("p",null,"As our backend servers don\u2019t support history we haven't forwarded  ",(0,a.kt)("inlineCode",{parentName:"p"},"/v1/history"),"  .. you are now starting to see the granular control that HAProxy can provide."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"backend")),(0,a.kt)("p",null,"This is where the two WAX  ",(0,a.kt)("inlineCode",{parentName:"p"},"nodeos"),"  servers will be specified and the load balancing algorithm will be configured roundrobin in this case:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"backend wax_api_servers  \n    balance roundrobin  \n    default-server check maxconn 3000  \n    server wax-pn-1 <PRIVATE LAN IP>:8888 cookie server1  \n    server wax-pn-2 <PRIVATE LAN IP>:8888 cookie server2\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Prometheus")),(0,a.kt)("p",null,"Enable the Prometheus service with the following additional front end section:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"frontend stats  \n        mode http  \n        bind <PRIVATE IP>:8404  \n        http-request use-service prometheus-exporter if { path /metrics }  \n        stats enable  \n        stats uri /stats  \n        stats refresh 10s\n")),(0,a.kt)("h1",{id:"save-and-start"},"Save and Start"),(0,a.kt)("p",null,"Now that that the  ",(0,a.kt)("inlineCode",{parentName:"p"},"haproxy.cfg"),"  file is successfully configured save and exit."),(0,a.kt)("p",null,"Check the configuration for errors:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"> haproxy -c -V -f /etc/haproxy/haproxy.cfg  \nConfiguration file is valid\n")),(0,a.kt)("p",null,"Restart the HAProxy Service"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"> sudo service haproxy restart> sudo service haproxy status  \nActive: active (running)\n")),(0,a.kt)("p",null,"The HAProxy server will now accept requests to the statistics dashboard powered by Prometheus where you can observe the operation of your newly built WAX HAProxy Load Balancer."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://miro.medium.com/max/700/1*jCwHJe48TawgDX3YpDyosQ.png",alt:null})),(0,a.kt)("p",null,"HAProxy Statistics Dashboard"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"http://<PRIVATE IP>:8404/stats\n")),(0,a.kt)("p",null,"And of course test an external request to your WAX  ",(0,a.kt)("inlineCode",{parentName:"p"},"nodeos"),"  load balanced servers after you have pointed your DNS A record to the configured HAProxy public IP address.  ",(0,a.kt)("em",{parentName:"p"},"NB: As we have an access-list configured to match interesting requests, the test request will have to be made using the DNS name and not an IP address.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"https://<Your Company DNS_Name>/v1/chain/get_info\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"These ",(0,a.kt)("strong",{parentName:"p"},"WAX Developer Technical Guides")," are created using source material from the ",(0,a.kt)("a",{parentName:"p",href:"https://medium.com/eosphere/wax-technical-how-to/home"},"EOSphere WAX Technical How To Series")),(0,a.kt)("p",null,"Be sure to ask any questions in the  ",(0,a.kt)("a",{parentName:"p",href:"https://t.me/eosphere_io"},"EOSphere Telegram")))}d.isMDXComponent=!0}}]);