"use strict";(self.webpackChunkwaxdevelopers=self.webpackChunkwaxdevelopers||[]).push([[9647],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),i=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=i(r),d=n,y=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return r?a.createElement(y,l(l({ref:t},p),{},{components:r})):a.createElement(y,l({ref:t},p))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:n,l[1]=c;for(var i=2;i<o;i++)l[i]=r[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6740:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var a=r(7462),n=(r(7294),r(3905));const o={title:"Deploy Your WAX RNG Contract",layout:"default",nav_order:85,parent:"Create a WAX RNG Smart Contract",grand_parent:"Tutorials","lang-ref":"Deploy Your WAX RNG Contract",lang:"en"},l=void 0,c={unversionedId:"tutorials/create-wax-rng-smart-contract/rng_deploy",id:"tutorials/create-wax-rng-smart-contract/rng_deploy",title:"Deploy Your WAX RNG Contract",description:"In this example, we'll use WAX-CDT tools to deploy your Lucky Number Generator smart contract. Refer to WAX-CDT Deploy for more information.",source:"@site/docs/tutorials/create-wax-rng-smart-contract/rng_deploy.md",sourceDirName:"tutorials/create-wax-rng-smart-contract",slug:"/tutorials/create-wax-rng-smart-contract/rng_deploy",permalink:"/waxdevelopers_test/docs/tutorials/create-wax-rng-smart-contract/rng_deploy",draft:!1,editUrl:"https://github.com/3dkrender/waxdevelopers_test/tree/main/docs/tutorials/create-wax-rng-smart-contract/rng_deploy.md",tags:[],version:"current",frontMatter:{title:"Deploy Your WAX RNG Contract",layout:"default",nav_order:85,parent:"Create a WAX RNG Smart Contract",grand_parent:"Tutorials","lang-ref":"Deploy Your WAX RNG Contract",lang:"en"},sidebar:"tutorialSidebar",previous:{title:"WAX RNG Basics",permalink:"/waxdevelopers_test/docs/tutorials/create-wax-rng-smart-contract/rng_basics"},next:{title:"Build Your Contract to call WAX RNG contract",permalink:"/waxdevelopers_test/docs/tutorials/create-wax-rng-smart-contract/rng_sample"}},s={},i=[],p={toc:i},u="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"In this example, we'll use WAX-CDT tools to deploy your Lucky Number Generator smart contract. Refer to ",(0,n.kt)("a",{parentName:"p",href:"/docs/dapp-development/deploy-dapp-on-wax/deploy_source"},"WAX-CDT Deploy")," for more information."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"First we will need to create a self-custodied account on testnet or mainnet to deploy the smart contract. For our example we will assume that the account is called ",(0,n.kt)("em",{parentName:"li"},"mywaxrngtest"),".")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Note:")," You can use the ",(0,n.kt)("a",{parentName:"p",href:"https://waxsweden.org/testnet/"},"WAXSweden")," team tools to create the testnet account and supply it with funds that you will need to purchase the RAM required for the smart contract deployment.\n:::"),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"From Docker, we open and unlock the wallet we created in the tutorials about ",(0,n.kt)("a",{parentName:"li",href:"/docs/dapp-development/setup-local-dapp-environment/dapp_wallet"},"how to create the development environment"),".")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"cleos wallet open -n mywallet && cleos wallet unlock -n mywallet --password {wallet.pwd}\n")),(0,n.kt)("p",null,"and import the mywaxrngtest active private key "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"cleos wallet import --private-key {mywaxrngtest_active_private_key}\n")),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"To run the inline ",(0,n.kt)("strong",{parentName:"li"},"requestrand")," action on the ",(0,n.kt)("strong",{parentName:"li"},"orng.wax")," smart contract, you'll need to give your new ",(0,n.kt)("strong",{parentName:"li"},"mywaxrngtest@active")," permission the additional ",(0,n.kt)("strong",{parentName:"li"},"eosio.code")," permission. This permission enhances security and allows your smart contract to send inline actions. From the command line, run the ",(0,n.kt)("inlineCode",{parentName:"li"},"cleos set account permission")," command, and include the literal ",(0,n.kt)("inlineCode",{parentName:"li"},"--add-code")," parameter.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"cleos -u [chain-api-url] set account permission mywaxrngtest active --add-code\n")),(0,n.kt)("p",null,"To verify the new permission, use the ",(0,n.kt)("inlineCode",{parentName:"p"},"cleos get account")," command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"cleos -u [chain-api-url] get account mywaxrngtest\n")),(0,n.kt)("ol",{start:4},(0,n.kt)("li",{parentName:"ol"},"Buy some RAM to depoy the smart contract:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},'cleos -u [chain-api-url] push action eosio buyram \'["mywaxrngtest", "mywaxrngtest", "200.00000000 WAX"]\' -p mywaxrngtest@active  \n')),(0,n.kt)("ol",{start:5},(0,n.kt)("li",{parentName:"ol"},"Finally, set your contract with the ",(0,n.kt)("inlineCode",{parentName:"li"},"cleos set contract")," command:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"cleos -u [chain-api-url] set contract mywaxrngtest mycontracts/rngtest/build/rngtest -p mywaxrngtest@active\n")))}m.isMDXComponent=!0}}]);